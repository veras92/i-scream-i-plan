{"version":3,"file":"static/js/134.3ac23c12.chunk.js","mappings":"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","sources":["modules/Header/components/ThemeToggler/ThemeToggler.styled.jsx","modules/Header/components/ThemeToggler/ThemeToggler.jsx","modules/Header/components/UserInfo/UserInfo.styled.jsx","modules/Header/components/UserInfo/UserInfo.jsx","modules/Header/Header.styled.jsx","modules/Header/Header.jsx","modules/SideBar/components/LogoutBtn/LogoutBtn.jsx","modules/SideBar/components/UserNav/UserNav.styled.jsx","modules/SideBar/components/UserNav/UserNav.jsx","modules/SideBar/SideBar.styled.jsx","modules/SideBar/SideBar.jsx","pages/MainLayout/MainLayout.styled.jsx","pages/MainLayout/MainLayout.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const ThemeIcon = styled.svg`\r\n  fill: ${props => props.theme.componentAccent};\r\n  height: 24px;\r\n  width: 24px;\r\n\r\n  @media (min-width: 765px) {\r\n    height: 32px;\r\n    width: 32px;\r\n  }\r\n`;\r\n\r\nexport const ToggleButton = styled.button`\r\n  color: transparent;\r\n  background-color: transparent;\r\n  border: none;\r\n  padding: 0px;\r\n  margin-right: 16px;\r\n`;\r\n","// \"1. Компонент відображає елемент для зміни значення теми зі світлої на темну та навпаки\r\n// 2. Початкове значення теми - світла\r\n// 3. Обрана тема записується в localStorage та використовується як активна при вході користувача в його обліковий запис\"\r\nimport sprite from 'shared/icons/sprite.svg';\r\nimport { toggleTheme } from 'redux/theme/operations';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectTheme } from 'redux/theme/selectors';\r\nimport { THEME_OPTIONS } from 'shared/services/themeOptions';\r\nimport { ThemeIcon, ToggleButton } from './ThemeToggler.styled';\r\n\r\nexport const ThemeToggler = () => {\r\n  const dispatch = useDispatch();\r\n  const handleThemeChange = () => {\r\n    dispatch(toggleTheme());\r\n  };\r\n  const mode = useSelector(selectTheme);\r\n\r\n  return (\r\n    <div>\r\n      <ToggleButton onClick={handleThemeChange}>\r\n        <ThemeIcon>\r\n          <use\r\n            href={\r\n              mode === THEME_OPTIONS.light\r\n                ? `${sprite}#icon-moon`\r\n                : `${sprite}#icon-sun`\r\n            }\r\n          />\r\n        </ThemeIcon>\r\n      </ToggleButton>\r\n    </div>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const UserName = styled.p`\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  line-height: 1.3;\r\n  margin-right: 14px;\r\n\r\n  @media (min-width: 765px) {\r\n    font-size: 18px;\r\n    line-height: 1;\r\n  }\r\n  color: ${props => props.theme.text};\r\n`;\r\n\r\nexport const UserNameIcon = styled.p`\r\n  \r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  line-height: 1.3;\r\n \r\n  color: black;\r\n`;\r\n\r\nexport const UserPicture = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  overflow: hidden;\r\n  border: 1.8px solid ${props => props.theme.componentAccent};\r\n  border-radius: 50%;\r\n  background-color: #f4f800;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  \r\n  @media (min-width: 765px) {\r\n    width: 44px;\r\n    height: 44px;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n","// \"1. Компонент підписаний на глобальний стейт з якого отримує ім'я користувача та url з фото користувача\r\n// 2. Компонент відображає ім'я користувача та його зображення/аватар.\r\n// 3. Якщо зображення відсутнє на його місці повинна відображатись перша буква імені в верхньому регістрі\"\r\nimport { Wrapper, UserName, UserPicture, UserNameIcon, } from './UserInfo.styled';\r\nimport { useAuth } from 'hooks/useAuth';\r\n\r\n\r\nexport const UserInfo = () => {\r\n  function getInitials(name) {\r\n    const initials = name\r\n      .split(' ')\r\n      .map((word) => word.charAt(0))\r\n      .join('')\r\n      .toUpperCase();\r\n  \r\n    return initials;\r\n  }\r\n    \r\n  const {name, userImgUrl} = useAuth();\r\n  \r\n  const displayName = userImgUrl ? (\r\n    <img src={userImgUrl} alt=\"UserPicture\" />\r\n  ) : (\r\n    <UserNameIcon className=\"initials\">{getInitials(name)}</UserNameIcon>\r\n  );\r\n  return (\r\n    <Wrapper>\r\n      <UserName>{name}</UserName>\r\n      <UserPicture>\r\n      {displayName}\r\n      </UserPicture> \r\n    </Wrapper>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 6.25rem;\r\n\r\n  @media (min-width: 768px) {\r\n    margin-bottom: 4rem;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    margin-bottom: 32px;\r\n  }\r\n  \r\n`;\r\n\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: auto;\r\n  \r\n`;\r\n\r\nexport const SectionTitle = styled.h1`\r\n  display: none;\r\n  color: ${props => props.theme.text};\r\n  @media (min-width: 1440px) {\r\n    display: block;\r\n\r\n    font-weight: 700;\r\n    font-size: 32px;\r\n    text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\r\n      0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\r\n  }\r\n`;\r\n\r\nexport const Toggler = styled.svg`\r\n  fill: transparent;\r\n  stroke: ${props => props.theme.text};\r\n\r\n  height: 24px;\r\n  width: 24px;\r\n\r\n  @media (min-width: 765px) {\r\n    height: 34px;\r\n    width: 34px;\r\n  }\r\n  @media (min-width: 1440px) {\r\n    display: none;\r\n  }\r\n`;\r\n","// \"1. Компонент використовує визначає активну сторінку і використовує відповідне значення заголовку з назвою даної сторінки.\r\n// 2. На планшетній та мобільній версіях відображається кнопка для відкриття бургер меню.\r\n// 3. На сторінціз календарем дня, при наявності не виконаних завдань в цей день, відображається Гусак з мотиваційним повідомленням, так як показано на макеті.\r\n// 4. Компонент рендерить:\r\n//  - ThemeToggler - перемикач теми світла/темна\r\n//  - UserInfo - блок з інфо про юзера\"\r\n\r\nimport { ThemeToggler } from './components/ThemeToggler/ThemeToggler';\r\nimport { UserInfo } from './components/UserInfo/UserInfo';\r\nimport { Wrapper, Info, SectionTitle, Toggler } from './Header.styled';\r\nimport { useLocation } from 'react-router-dom';\r\nimport sprite from 'shared/icons/sprite.svg';\r\n\r\nexport const Header = ({ onToggle }) => {\r\n  const location = useLocation();\r\n  const currentPath = location.pathname;\r\n\r\n  let title = '';\r\n  if (currentPath.startsWith('/account')) {\r\n    title = 'User Profile';\r\n  } else if (currentPath.startsWith('/calendar/')) {\r\n    title = 'Calendar';\r\n  } else {\r\n    title = '';\r\n  }\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <SectionTitle>{title}</SectionTitle>\r\n        <Toggler\r\n          onClick={() => {\r\n            onToggle();\r\n          }}\r\n        >\r\n          <use href={`${sprite}#icon-menu`} />\r\n        </Toggler>\r\n        <Info>\r\n          <ThemeToggler />\r\n          <UserInfo />\r\n        </Info>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n","// \"1. Компонент рендерить кнопку.\r\n// 2. Клік по кнопці виконує запит на бекенд який видаляє активну сесію користувача.\r\n// 3. Успішна відповідь переводить користувача в статус неавторизованого, змінюючи відповідне поле в глобальному сетейті, а також обнуляє всі данні авторизованого користувача  в глобальному стейті.\r\n// 4. Відповідь з помилкою виводить відповідне пуш-повідомлення, і вилогінює користуваача на клієнті, як і в попередньому пункті.\"\r\nimport sprite from 'shared/icons/sprite.svg';\r\n\r\nimport { useLazyLogoutUserQuery } from 'redux/auth/authApi';\r\nimport { Svg, Button } from 'shared/styles/components';\r\n\r\nexport const LogoutBtn = () => {\r\n  const [logout] = useLazyLogoutUserQuery();\r\n\r\n  const handleLogout = () => logout();\r\n\r\n  return (\r\n    <div>\r\n      <Button type=\"button\" onClick={handleLogout}>\r\n        {' '}\r\n        Log out\r\n        <Svg>\r\n          <use href={`${sprite}#icon-log-out`} />\r\n        </Svg>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavList = styled.nav`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: ${props => props.theme.text};\n  width: 185px;\n  \n  font-weight: 600;\n  font-size: 14px;\n  padding: 10px 14px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  &.active {\n    color: ${props => props.theme.activeText};\n    background-color: ${props => props.theme.bcgFocus};\n\n    & > svg {\n      fill: transparent;\n      stroke: ${props => props.theme.activeText};\n    }\n  }\n\n  @media (min-width: 765px) {\n    font-size: 16px;\n    padding: 16px 20px;\n    width: 225px;\n  }\n\n  @media (min-width: 1087px) {\n    width: 241px;\n  }\n`;\n\nexport const NavIcon = styled.svg`\n  fill: transparent;\n  stroke: ${props => props.theme.text};\n\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n\n  @media (min-width: 765px) {\n    width: 24px;\n    height: 24px;\n    margin-right: 12px;\n  }\n`;\n","// \"Компонент  в собі містить блок список елементів навігації за наступними маршрутами:\r\n//  - /account - редіректить на AccountPage\r\n//  - /calendar - редіректить на CalendarPage з модулем календаря місяця.\"\r\nimport sprite from 'shared/icons/sprite.svg';\r\nimport { NavList, StyledLink, NavIcon } from './UserNav.styled';\r\n\r\nexport const UserNav = () => {\r\n  return (\r\n    <>\r\n      <NavList>\r\n        <StyledLink to=\"/account\">\r\n          <NavIcon>\r\n            <use href={`${sprite}#icon-user-check-01`} />\r\n          </NavIcon>\r\n          <span>My account</span>\r\n        </StyledLink>\r\n        <StyledLink to=\"/calendar\">\r\n          <NavIcon>\r\n            <use href={`${sprite}#icon-calendar-check-02`} />\r\n          </NavIcon>\r\n          <span>Calendar</span>\r\n        </StyledLink>\r\n      </NavList>\r\n    </>\r\n  );\r\n};\r\n","import styled from '@emotion/styled/macro';\r\nimport facepaint from 'facepaint';\r\nimport { BREAKPOINTS } from 'shared/services/deviceWidth';\r\n\r\nconst media = facepaint(BREAKPOINTS.map(bp => `@media (min-width: ${bp}px)`));\r\n\r\nexport const LogoTitle = styled.h2`\r\n  font-family: Coolvetica;\r\n  font-weight: 400;\r\n  font-size: 18px;\r\n  line-height: 1.33;\r\n  color: ${props => props.theme.componentAccent};\r\n\r\n  @media (min-width: 1440px) {\r\n    font-size: 24px;\r\n  }\r\n`;\r\n\r\nexport const SidebarWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  width: 100%;\r\n  max-width: 289px;\r\n  padding: 24px 32px;\r\n  background-color: ${props => props.theme.bcgPrimary};\r\n  @media (max-width: 1440px) {\r\n    position: absolute;\r\n    z-index: 5000;\r\n  }\r\n`;\r\n\r\nexport const SidebarHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  ${media({\r\n    marginBottom: ['64px', '64px', '50px', '32px'],\r\n  })};\r\n`;\r\n\r\nexport const GooseImg = styled.img`\r\n  margin-right: 6px;\r\n\r\n  ${media({\r\n    width: ['36px', '36px', '60px', '71px'],\r\n    height: ['35px', '35px', '58px', '68px'],\r\n  })};\r\n`;\r\n\r\nexport const CloseIcon = styled.svg`\r\n  fill: ${props => props.theme.text};\r\n\r\n  margin-left: auto;\r\n  height: 24px;\r\n  width: 24px;\r\n\r\n  @media (min-width: 765px) {\r\n    height: 33px;\r\n    width: 33px;\r\n  }\r\n  @media (min-width: 1440px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const SidebarSubTitle = styled.h3`\r\n  color: ${props => props.theme.textSecondary};\r\n  font-weight: 600;\r\n  line-height: 1.2;\r\n  font-size: 12px;\r\n  margin-bottom: 24px;\r\n\r\n  @media (min-width: 765px) {\r\n    font-size: 14px;\r\n    margin-bottom: 32px;\r\n  }\r\n`;\r\n","// \"Модуль рендерить в собі компоненти:\r\n//  - UserNav - блок основної навігації\r\n//  - LogoutBtn - виходу з облікового запису\"\r\n\r\nimport { LogoutBtn } from './components/LogoutBtn/LogoutBtn';\r\nimport { UserNav } from './components/UserNav/UserNav';\r\nimport goose from 'shared/icons/goose.svg';\r\nimport sprite from 'shared/icons/sprite.svg';\r\n\r\nimport {\r\n  LogoTitle,\r\n  SidebarWrapper,\r\n  SidebarHeader,\r\n  GooseImg,\r\n  CloseIcon,\r\n  SidebarSubTitle,\r\n} from './SideBar.styled';\r\n\r\nexport const SideBar = ({ onToggle }) => {\r\n  return (\r\n    <SidebarWrapper>\r\n      <SidebarHeader>\r\n        <GooseImg src={goose} alt=\"goose\" />\r\n        <LogoTitle>Goose Track</LogoTitle>\r\n        <CloseIcon\r\n          onClick={() => {\r\n            onToggle();\r\n          }}\r\n        >\r\n          <use href={`${sprite}#icon-x-close`} />\r\n        </CloseIcon>\r\n      </SidebarHeader>\r\n      <SidebarSubTitle>User Panel</SidebarSubTitle>\r\n      <UserNav />\r\n      <LogoutBtn />\r\n    </SidebarWrapper>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  // justify-content: space-between;\r\n`;\r\n","// \"1. Сторінка повинна відображатись відповідно до макету на 3х розширеннях (375, 768, 1440), на ширині екрану до 375 блоки розмітки повинні тягнутись\r\n// 2. Компонент здійснює запит по данні користувача(email, name, id та т.і.), якщо під час рендеру компоненту ці данні відсутні в глобальному стейті\r\n// 3. Комопонент рендерить:\r\n//  - Header - модуль що відображається на всіх сторінках авторизованого юзера. Показує загальну інформацію та допоміжний інтерфейс роботи з обліковим записом.\r\n//  - SideBar - модуль що відображається на всіх сторінках авторизованого юзера, на планшеті та мобілці знаходиться в бургер-меню. Показує навігацію між сторінками та кнопку виходу з облікового запису. \"\r\nimport { useEffect, useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nimport { Header } from 'modules/Header/Header';\r\nimport { SideBar } from 'modules/SideBar/SideBar';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { MainWrapper } from 'shared/styles/components';\r\nimport { Wrapper } from './MainLayout.styled';\r\n\r\nfunction useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n  return windowSize;\r\n}\r\n\r\nexport default function MainLayout() {\r\n  const [isVisible, setVisible] = useState(false);\r\n  const toggleSidebar = () => setVisible(isVisible => !isVisible);\r\n\r\n  const size = useWindowSize();\r\n\r\n  useEffect(() => {\r\n    setVisible(size.width > 1440 && true);\r\n  }, [size.width]);\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <AnimatePresence>\r\n          {isVisible && (\r\n            <motion.div\r\n              initial={{ y: 10, opacity: 0 }}\r\n              animate={{ y: 0, opacity: 1 }}\r\n              exit={{ y: -10, opacity: 0 }}\r\n              transition={{ duration: 0.2 }}\r\n            >\r\n              <SideBar onToggle={toggleSidebar} />\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n        <MainWrapper>\r\n          <Header onToggle={toggleSidebar} />\r\n          <Outlet />\r\n        </MainWrapper>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n"],"names":["ThemeIcon","styled","props","theme","componentAccent","ToggleButton","ThemeToggler","dispatch","useDispatch","mode","useSelector","selectTheme","onClick","toggleTheme","href","THEME_OPTIONS","sprite","UserName","text","UserNameIcon","UserPicture","Wrapper","UserInfo","useAuth","name","userImgUrl","displayName","src","alt","className","split","map","word","charAt","join","toUpperCase","getInitials","Info","SectionTitle","Toggler","Header","onToggle","currentPath","useLocation","pathname","title","startsWith","LogoutBtn","useLazyLogoutUserQuery","logout","type","NavList","StyledLink","NavLink","activeText","bcgFocus","NavIcon","UserNav","to","media","facepaint","BREAKPOINTS","bp","LogoTitle","SidebarWrapper","bcgPrimary","SidebarHeader","marginBottom","GooseImg","width","height","CloseIcon","SidebarSubTitle","textSecondary","SideBar","goose","MainLayout","useState","isVisible","setVisible","toggleSidebar","size","undefined","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","AnimatePresence","motion","initial","y","opacity","animate","exit","transition","duration"],"sourceRoot":""}