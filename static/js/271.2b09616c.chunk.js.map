{"version":3,"file":"static/js/271.2b09616c.chunk.js","mappings":"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","sources":["../node_modules/facepaint/src/index.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/wildcards.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["/* eslint-disable no-param-reassign */\nexport default function(breakpoints, { literal, overlap } = {}) {\n  const mq = literal ? breakpoints : ['&'].concat(breakpoints)\n\n  function flatten(obj) {\n    if (typeof obj !== 'object' || obj == null) {\n      return []\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.map(flatten)\n    }\n\n    const slots = {}\n    const objects = {}\n    const props = {}\n    Object.keys(obj).forEach(key => {\n      // Check if value is an array, but skip if it looks like a selector.\n      // key.indexOf('&') === 0\n\n      let item = obj[key]\n      if (!Array.isArray(item) && literal) item = [item]\n\n      if ((literal || Array.isArray(item)) && key.charCodeAt(0) !== 38) {\n        let prior\n        item.forEach((v, index) => {\n          // Optimize by removing duplicated media query entries\n          // when they are explicitly known to overlap.\n          if (overlap && prior === v) {\n            return\n          }\n\n          if (v == null) {\n            // Do not create entries for undefined values as this will\n            // generate empty media media quries\n            return\n          }\n\n          prior = v\n\n          if (index === 0 && !literal) {\n            props[key] = v\n          } else if (slots[mq[index]] === undefined) {\n            slots[mq[index]] = { [key]: v }\n          } else {\n            slots[mq[index]][key] = v\n          }\n        })\n      } else if (typeof item === 'object') {\n        objects[key] = flatten(item)\n      } else {\n        props[key] = item\n      }\n    })\n\n    // Ensure that all slots and then child objects are pushed to the end\n    mq.forEach(el => {\n      if (slots[el]) {\n        props[el] = slots[el];\n      }\n    })\n    Object.assign(props, objects)\n    return props\n  }\n\n  return (...values) => values.map(flatten)\n}\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { frame } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\nimport { fillWildcardKeyframes } from './wildcards.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        return fillWildcardKeyframes(origin, target);\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","function fillWildcardKeyframes(origin, [...keyframes]) {\n    /**\n     * Ensure an wildcard keyframes are hydrated by the origin.\n     */\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? origin : keyframes[i - 1];\n        }\n    }\n    return keyframes;\n}\n\nexport { fillWildcardKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.2\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.2\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["breakpoints","literal","overlap","mq","concat","flatten","obj","Array","isArray","map","slots","objects","props","keys","forEach","item","key","charCodeAt","prior","v","undefined","_slots$mq$index","el","assign","values","index","_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","_objectWithoutProperties","source","excluded","i","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","prevProps","element","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","register","delete","_","PresenceContext","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","useState","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","frame","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","callback","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","useEffect","presentKeys","targetKeys","numPresent","add","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","createContext","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","cancel","process","createRenderStep","processStep","stepId","processFrame","Math","max","min","requestAnimationFrame","startLoop","keepAlive","immediate","cancelFrame","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","isVariantLabel","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","fillWildcardKeyframes","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","addUniqueItem","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","prevIsPresent","prevPresenceContext","exitAnimation","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","fallback","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}