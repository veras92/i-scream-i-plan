{"version":3,"file":"static/js/883.7442a80a.chunk.js","mappings":"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","sources":["modules/UserForm/consts/userFormSchema.js","shared/utils/formatDate.js","modules/UserForm/consts/userFormInputs.js","modules/UserForm/components/UserAvatarField/UserAvatarField.styled.jsx","modules/UserForm/components/UserAvatarField/UserAvatarField.jsx","shared/utils/setFileUrl.js","modules/UserForm/components/DatePicker/DatePicker.styled.jsx","modules/UserForm/components/DatePicker/DatePicker.jsx","modules/UserForm/UserForm.jsx","pages/AccountPage/AccountPage.jsx","shared/components/FormFiled/FormField.styled.jsx","shared/components/FormFiled/FormField.jsx","shared/styles/components.jsx","shared/validation/regExps.js"],"sourcesContent":["import { nameRegExp, phoneRegExp } from 'shared/validation/regExps';\nimport * as Yup from 'yup';\n\nexport const userFormSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('This field is required')\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .max(16, 'Name may contain only 16 characters'),\n\n  phone: Yup.string().matches(phoneRegExp, {\n    message:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    excludeEmptyString: true,\n  }),\n\n  birthday: Yup.date('Invalid date format'),\n  //transphorm matches format\n  skype: Yup.string().max(16, 'Skype may contain only 16 characters'),\n  email: Yup.string()\n    .email('Invalid email format')\n    .required('This field is required'),\n  userImgUrl: Yup.mixed(),\n  //   .test(\n  //   'filetype',\n  //   'Please provide a supported file type: \"jpeg\", \"jpg\", \"png\"',\n  //   (value, context) => {\n  //     if (value === '') return true;\n  //     console.dir(value);\n  //     const isValid = ['image/jpeg', 'image/png', 'image/jpg'].includes(value);\n  //     if (!isValid) context.createError();\n  //     return isValid;\n  //   }\n  // ),\n});\n","export const formatDate = date => {\n  const y = date.getFullYear();\n  const m = date.getMonth();\n  const d = date.getDate();\n\n  return `${y}-${(m + 1).toString().padStart(2, '0')}-${d\n    .toString()\n    .padStart(2, '0')}`;\n};\n","import { nanoid } from '@reduxjs/toolkit';\n\nexport const userFormInputs = [\n  {\n    inputName: 'name',\n    type: 'text',\n    id: nanoid(),\n    label: 'User Name',\n    required: true,\n    placeholder: 'Enter your name',\n  },\n  {\n    inputName: 'phone',\n    type: 'tel',\n    id: nanoid(),\n    label: 'Phone',\n    required: false,\n    placeholder: 'Enter phone',\n  },\n  {\n    inputName: 'birthday',\n    type: 'date',\n    id: nanoid(),\n    label: 'Birthday',\n    required: false,\n    placeholder: 'DD/MM/YYYY',\n  },\n  {\n    inputName: 'skype',\n    type: 'string',\n    id: nanoid(),\n    label: 'Skype',\n    required: false,\n    placeholder: 'Enter skype',\n  },\n  {\n    inputName: 'email',\n    type: 'email',\n    id: nanoid(),\n    label: 'Email',\n    required: true,\n    placeholder: 'Enter email',\n  },\n];\n\nexport const userAvatarInput = {\n  inputName: 'userImgUrl',\n  type: 'file',\n  id: nanoid(),\n  label: '',\n  required: false,\n  placeholder: '',\n};\n","import styled from '@emotion/styled';\n\nexport const Svg = styled.svg`\n  fill: transparent;\n  stroke: var(--main-blue-color);\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: block;\n  width: 124px;\n  height: 124px;\n  margin-bottom: 20px;\n`;\n\nexport const HiddenInput = styled.input`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n","import { setFileUrl } from 'shared/utils/setFileUrl';\nimport sprite from 'shared/icons/sprite.svg';\nimport { HiddenInput, Label, Svg } from './UserAvatarField.styled';\nimport { ErrorMessage } from '@hookform/error-message';\n\nexport const UserAvatarField = ({\n  inputName,\n  id,\n  type,\n  userName,\n  register,\n  currentAvatarUrl,\n  setCurrentAvatarUrl,\n  errors,\n}) => {\n  return (\n    <div>\n      <Label htmlFor={id}>\n        {!currentAvatarUrl ? (\n          <p>\n            <Svg>\n              <use href={sprite + '#icon-user-check-01'} />\n            </Svg>\n          </p>\n        ) : (\n          <img src={currentAvatarUrl} alt=\"user_photo\" />\n        )}\n      </Label>\n      <HiddenInput\n        id={id}\n        {...register(inputName)}\n        type={type}\n        onChange={e => {\n          const file = e.target.files[0];\n          setFileUrl(file, setCurrentAvatarUrl);\n          return e;\n        }}\n      />\n      <ErrorMessage errors={errors} name=\"userImgUrl\" />\n      <h3>{userName}</h3>\n      <p>User</p>\n    </div>\n  );\n};\n","export const setFileUrl = (file, cbSetFileUrl) => {\n  const fileReader = new FileReader();\n  fileReader.readAsDataURL(file);\n  fileReader.onload = () => {\n    cbSetFileUrl(fileReader.result);\n  };\n};\n","import styled from '@emotion/styled';\nimport ReactDatePicker from 'react-datepicker';\n\nimport 'react-datepicker/dist/react-datepicker.css';\n\nexport const StyledDatePicker = styled(ReactDatePicker)``;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n\n  color: #111111;\n`;\n\nexport const Input = styled.input`\n  background: #ffffff;\n  outline: none;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  border-radius: 8px;\n\n  padding: 0.875rem;\n\n  width: 100%;\n\n  &::placeholder {\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 18px;\n\n    color: #dce3e5;\n  }\n`;\n","import React from 'react';\nimport { Input, Label, StyledDatePicker } from './DatePicker.styled';\nimport { Controller } from 'react-hook-form';\nimport { ErrorMessage } from '@hookform/error-message';\n\nexport const DatePicker = ({\n  control,\n  inputName,\n  label,\n  id,\n  placeholder,\n  errors,\n}) => {\n  return (\n    <>\n      <Label htmlFor={id}>{label}</Label>\n      <Controller\n        control={control}\n        name={inputName}\n        render={({ field: { onChange, onBlur, value } }) => (\n          <StyledDatePicker\n            id={id}\n            placeholderText={placeholder}\n            onChange={onChange}\n            onBlur={onBlur}\n            selected={value}\n            dateFormat=\"dd/MM/yyyy\"\n            customInput={<Input />}\n          />\n        )}\n      />\n      <ErrorMessage errors={errors} name={inputName} />\n    </>\n  );\n};\n","// \"1. Компонент сторінки підписанй на глобальний стейт state.auth.user.\r\n// 2. Компонент рендерить форму з полями заповненми даними про юзера та має локальний стейт для цих данних.\r\n// 3. За відсутності данних, в полях форми показуються плейсхолдери, а в полі з датою показується поточна дата.\r\n// 4. При додаванні картинки в поле для вибору аватара, вона з'являється на місці плейсхолдера.\r\n// 5. Кнопка сабміту не активна, поки в полях не зміняться значення.\r\n// 6. Після зміни будь-якого значення кнопка стає активною.\r\n// 7. Додати валідацію на поля форми.\r\n// 8. По сабміту дані відправляються на бек і кнопка сабміту стає знову неактивною.\r\n// 9. При успішній відповіді данні пишуться в глобальний стейт.\r\n// 10. При помилці юзеру виводиться відповідне пушповідомлення.\"\r\n\r\nimport { useAuth } from 'hooks/useAuth';\r\nimport { useUpdateUserInfoMutation } from 'redux/auth/authApi';\r\n\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { userFormSchema } from './consts/userFormSchema';\r\nimport { formatDate } from 'shared/utils/formatDate';\r\nimport { userAvatarInput, userFormInputs } from './consts/userFormInputs';\r\n\r\nimport { UserAvatarField } from './components/UserAvatarField/UserAvatarField';\r\nimport { FormFiled } from 'shared/components/FormFiled/FormField';\r\nimport { DatePicker } from './components/DatePicker/DatePicker';\r\n\r\nimport { Button } from 'shared/styles/components';\r\nimport { parse } from 'date-fns';\r\nimport { useState } from 'react';\r\n\r\nconst today = new Date();\r\n\r\nexport const UserForm = () => {\r\n  const { name, email, phone, skype, birthday, userImgUrl } = useAuth();\r\n  const [currentAvatarUrl, setCurrentAvatarUrl] = useState(userImgUrl);\r\n\r\n  const [update, { isLoading }] = useUpdateUserInfoMutation();\r\n\r\n  const {\r\n    register: reg,\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors, isDirty },\r\n  } = useForm({\r\n    resolver: yupResolver(userFormSchema),\r\n    defaultValues: {\r\n      name,\r\n      email,\r\n      phone: !phone ? '' : phone,\r\n      birthday: !birthday ? today : parse('2023-04-15', 'yyyy-MM-dd', today),\r\n      skype: !skype ? '' : skype,\r\n      userImgUrl: !userImgUrl ? '' : userImgUrl,\r\n    },\r\n  });\r\n\r\n  const onSubmit = async data => {\r\n    const preparedBirthday =\r\n      formatDate(data.birthday) === formatDate(today)\r\n        ? null\r\n        : formatDate(data.birthday);\r\n    const preparedUserImgUrl = data.userImgUrl === '' ? null : currentAvatarUrl;\r\n    const preparedPhone = data.phone === '' ? null : Number(data.phone);\r\n    const preparedSkype = data.skype === '' ? null : data.skype;\r\n    const preparedData = {\r\n      ...data,\r\n      phone: preparedPhone,\r\n      skype: preparedSkype,\r\n      birthday: preparedBirthday,\r\n      userImgUrl: preparedUserImgUrl,\r\n    };\r\n    try {\r\n      await update(preparedData).unwrap();\r\n    } catch (e) {\r\n      if (e.status === 413) {\r\n        alert('the image is too large');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"false\">\r\n      <UserAvatarField\r\n        userName={name}\r\n        errors={errors}\r\n        register={reg}\r\n        currentAvatarUrl={currentAvatarUrl}\r\n        setCurrentAvatarUrl={setCurrentAvatarUrl}\r\n        {...userAvatarInput}\r\n      />\r\n      <div>\r\n        {userFormInputs.map(input =>\r\n          input.type !== 'date' ? (\r\n            <FormFiled\r\n              key={input.id}\r\n              {...input}\r\n              register={reg}\r\n              errors={errors}\r\n            />\r\n          ) : (\r\n            <DatePicker\r\n              key={input.id}\r\n              {...input}\r\n              control={control}\r\n              errors={errors}\r\n            />\r\n          )\r\n        )}\r\n      </div>\r\n      <Button\r\n        type=\"submit\"\r\n        function=\"save\"\r\n        disabled={isLoading || (userImgUrl === currentAvatarUrl && !isDirty)}\r\n      >\r\n        Save changes\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\n// \"валідація форми:\r\n\r\n// аватар: тип файл\r\n// юзерНейм: макс. 16символів | обов'язково\r\n// емейл: емейл | обов'язково\r\n// день народження: дата - YYYY-MM-DD\r\n// телефон: +380971234567\r\n// скайп: макс. 16 символів\"\r\n","// \"1. Компонент рендериться на маршрут /account\r\n// 2. На сторінці знаходиться компонент форми UserForm\"\r\n\r\nimport { UserForm } from 'modules/UserForm/UserForm';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nexport default function AccountPage() {\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>Account</title>\r\n      </Helmet>\r\n      <UserForm />\r\n    </div>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 0.5rem;\n\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 12px;\n  line-height: 15px;\n\n  color: #111111;\n`;\n\nexport const Input = styled.input`\n  background: #FFFFFF;\n  outline: none;\n  border: 1px solid rgba(220, 227, 229, 0.6);\n  border-radius: 8px;\n\n  padding: 0.875rem;\n\n  width: 100%;\n\n  &::placeholder {\n    font-family: 'Inter';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 18px;\n\n    color: #DCE3E5;\n  }\n`;\n\n","import PropTypes from 'prop-types';\nimport { ErrorMessage } from '@hookform/error-message';\n\nimport { Label, Input } from './FormField.styled';\n\nexport const FormFiled = ({\n  id,\n  inputName,\n  type,\n  placeholder,\n  label,\n  register,\n  required,\n  errors,\n}) => {\n  return (\n    <div>\n      <Label htmlFor={id}>{label}</Label>\n      <Input\n        id={id}\n        type={type}\n        placeholder={placeholder}\n        {...register(inputName, { required })}\n      />\n      <ErrorMessage errors={errors} name={inputName} />\n    </div>\n  );\n};\n\nFormFiled.propTypes = {\n  id: PropTypes.string.isRequired,\n  inputName: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  register: PropTypes.func.isRequired,\n  required: PropTypes.bool.isRequired,\n  errors: PropTypes.any.isRequired,\n};\n","import styled from '@emotion/styled/macro';\nimport facepaint from 'facepaint';\n\nimport { BREAKPOINTS } from 'shared/services/deviceWidth';\n\nconst media = facepaint(BREAKPOINTS.map(bp => `@media (min-width: ${bp}px)`));\n\nexport const Svg = styled.svg`\n  fill: transparent;\n  stroke: ${props => props.theme.componentPrimary};\n\n  @keyframes scale-up-hor-left {\n    0% {\n      -webkit-transform: scaleX(0.4);\n      transform: scaleX(0.4);\n      -webkit-transform-origin: 0% 0%;\n      transform-origin: 0% 0%;\n    }\n    100% {\n      -webkit-transform: scaleX(1);\n      transform: scaleX(1);\n      -webkit-transform-origin: 0% 0%;\n      transform-origin: 0% 0%;\n    }\n  }\n  ${media({\n    width: ['18px', '18px', '20px', '20px'],\n    height: ['18px', '18px', '20px', '20px'],\n  })};\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  column-gap: 0.8125rem;\n\n  width: ${props => props.width || ''};\n  margin-top: 0.5rem;\n\n  background-color: ${props => props.theme.componentAccent};\n  box-shadow: 4px 2px 16px ${props => props.theme.btnShadow};\n  border-radius: 16px;\n\n  border: none;\n\n  font-family: 'Inter';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 0.875rem;\n  line-height: 1.125rem;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.componentPrimary};\n\n  &:hover ${Svg} {\n    animation: scale-up-hor-left 0.7s cubic-bezier(0.39, 0.575, 0.565, 1) both;\n  }\n  function: ${props => props.function || false};\n  padding: ${props =>\n    props.padding\n      ? props.padding\n      : media({\n          padding: [\n            props.function === 'add'\n              ? '16px 62px'\n              : props.function === 'save'\n              ? '14px 50px'\n              : '14px 28px',\n            props.function === 'add'\n              ? '16px 62px'\n              : props.function === 'save'\n              ? '14px 50px'\n              : '14px 28px',\n            props.function === 'add'\n              ? '16px 62px'\n              : props.function === 'save'\n              ? '14px 84px'\n              : '16px 24px',\n            props.function === 'add'\n              ? '16px 62px'\n              : props.function === 'save'\n              ? '14px 84px'\n              : '16px 23px',\n          ],\n        })};\n`;\n","export const nameRegExp = new RegExp(\n  \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n);\n// e.g. Olexa Dovbush\n\nexport const passwordRegExp = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n// min 8 characters, 1 upper case letter, 1 lower case letter, 1 numeric digit.\n\nexport const phoneRegExp =\n  /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\n// +380971234567\n"],"names":["userFormSchema","Yup","shape","name","required","matches","nameRegExp","max","phone","phoneRegExp","message","excludeEmptyString","birthday","skype","email","userImgUrl","formatDate","date","y","getFullYear","m","getMonth","d","getDate","toString","padStart","userFormInputs","inputName","type","id","nanoid","label","placeholder","userAvatarInput","Svg","styled","Label","HiddenInput","UserAvatarField","userName","register","currentAvatarUrl","setCurrentAvatarUrl","errors","htmlFor","src","alt","href","sprite","onChange","e","file","cbSetFileUrl","fileReader","FileReader","readAsDataURL","onload","result","setFileUrl","target","files","StyledDatePicker","ReactDatePicker","Input","DatePicker","control","render","field","onBlur","value","placeholderText","selected","dateFormat","customInput","today","Date","UserForm","useAuth","useState","useUpdateUserInfoMutation","update","isLoading","useForm","resolver","yupResolver","defaultValues","parse","reg","handleSubmit","formState","isDirty","onSubmit","data","preparedBirthday","preparedUserImgUrl","preparedPhone","Number","preparedSkype","preparedData","unwrap","status","alert","autoComplete","map","input","function","disabled","AccountPage","Helmet","FormFiled","media","facepaint","BREAKPOINTS","bp","props","theme","componentPrimary","width","height","Button","componentAccent","btnShadow","padding","RegExp","passwordRegExp"],"sourceRoot":""}