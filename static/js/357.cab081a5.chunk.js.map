{"version":3,"file":"static/js/357.cab081a5.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/wildcards.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { frame } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\nimport { fillWildcardKeyframes } from './wildcards.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        return fillWildcardKeyframes(origin, target);\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","function fillWildcardKeyframes(origin, [...keyframes]) {\n    /**\n     * Ensure an wildcard keyframes are hydrated by the origin.\n     */\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? origin : keyframes[i - 1];\n        }\n    }\n    return keyframes;\n}\n\nexport { fillWildcardKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.2\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.2\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","values","register","delete","undefined","forEach","_","key","PresenceContext","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","useState","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","frame","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","callback","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","createContext","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","cancel","index","process","createRenderStep","processStep","stepId","processFrame","Math","max","min","requestAnimationFrame","startLoop","keepAlive","immediate","cancelFrame","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","arguments","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","fillWildcardKeyframes","animateMotionValue","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","prevIsPresent","prevPresenceContext","exitAnimation","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","fallback","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","record","data","MotionDebug","isSVGElement","SVGElement","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","canSkip","attemptToResolveRelativeTarget","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}