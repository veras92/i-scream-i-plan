{"version":3,"file":"static/js/736.62324706.chunk.js","mappings":"iMAIaA,EAAe,WAC1B,OAAO,0BACL,kDAIH,ECNYC,EAAW,WACtB,OAAO,4BACL,oCACA,gBAAKC,KAAK,IAAIC,IAAI,OAErB,ECCYC,EAAS,WACpB,OACE,iCACE,0BACE,qDAEF,SAACJ,EAAD,KACA,SAACC,EAAD,MAGL,ECfYI,EAAY,WACvB,OAAO,0BACL,mBAAQC,KAAK,SAAb,wBAEH,E,UCHYC,EAAU,WACrB,OACE,iCACE,sCACA,4BACE,SAAC,KAAD,CAASC,GAAG,WAAZ,yBACA,SAAC,KAAD,CAASA,GAAG,YAAZ,2BAIP,ECTYC,EAAU,WACrB,OACE,iCACE,4BACA,oBAGA,yCACA,6CAEA,SAACF,EAAD,KACA,SAACF,EAAD,MAGL,E,UCXc,SAASK,IACtB,OACE,iCACE,yCACA,SAACN,EAAD,KACA,SAACK,EAAD,KACA,SAAC,KAAD,MAGL,C","sources":["modules/Header/components/ThemeToggler/ThemeToggler.jsx","modules/Header/components/UserInfo/UserInfo.jsx","modules/Header/Header.jsx","modules/SideBar/components/LogoutBtn/LogoutBtn.jsx","modules/SideBar/components/UserNav/UserNav.jsx","modules/SideBar/SideBar.jsx","pages/MainLayout/MainLayout.jsx"],"sourcesContent":["// \"1. Компонент відображає елемент для зміни значення теми зі світлої на темну та навпаки\r\n// 2. Початкове значення теми - світла\r\n// 3. Обрана тема записується в localStorage та використовується як активна при вході користувача в його обліковий запис\"\r\n\r\nexport const ThemeToggler = () => {\r\n  return <div>\r\n    <button>\r\n      SVG toggle Theme\r\n    </button>\r\n  </div>;\r\n};\r\n","// \"1. Компонент підписаний на глобальний стейт з якого отримує ім'я користувача та url з фото користувача\r\n// 2. Компонент відображає ім'я користувача та його зображення/аватар.\r\n// 3. Якщо зображення відсутнє на його місці повинна відображатись перша буква імені в верхньому регістрі\"\r\n\r\nexport const UserInfo = () => {\r\n  return <div>\r\n    <span>Name</span>\r\n    <img href=\"#\" alt=\"\"/>\r\n  </div>;\r\n};\r\n","// \"1. Компонент використовує визначає активну сторінку і використовує відповідне значення заголовку з назвою даної сторінки.\r\n// 2. На планшетній та мобільній версіях відображається кнопка для відкриття бургер меню.\r\n// 3. На сторінціз календарем дня, при наявності не виконаних завдань в цей день, відображається Гусак з мотиваційним повідомленням, так як показано на макеті.\r\n// 4. Компонент рендерить:\r\n//  - ThemeToggler - перемикач теми світла/темна\r\n//  - UserInfo - блок з інфо про юзера\"\r\n\r\nimport { ThemeToggler } from './components/ThemeToggler/ThemeToggler';\r\nimport { UserInfo } from './components/UserInfo/UserInfo';\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <h1>Use Profile/ Calendar</h1>\r\n      </div>\r\n      <ThemeToggler />\r\n      <UserInfo />\r\n    </>\r\n  );\r\n};\r\n","// \"1. Компонент рендерить кнопку.\r\n// 2. Клік по кнопці виконує запит на бекенд який видаляє активну сесію користувача.\r\n// 3. Успішна відповідь переводить користувача в статус неавторизованого, змінюючи відповідне поле в глобальному сетейті, а також обнуляє всі данні авторизованого користувача  в глобальному стейті.\r\n// 4. Відповідь з помилкою виводить відповідне пуш-повідомлення, і вилогінює користуваача на клієнті, як і в попередньому пункті.\"\r\n\r\nexport const LogoutBtn = () => {\r\n  return <div>\r\n    <button type=\"button\">LogoutBtn</button>\r\n  </div>;\r\n};\r\n","// \"Компонент  в собі містить блок список елементів навігації за наступними маршрутами:\r\n//  - /account - редіректить на AccountPage\r\n//  - /calendar - редіректить на CalendarPage з модулем календаря місяця.\"\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const UserNav = () => {\r\n  return (\r\n    <>\r\n      <div>UserNav</div>\r\n      <nav>\r\n        <NavLink to=\"/account\">My account</NavLink>\r\n        <NavLink to=\"/calendar\">Calendar</NavLink>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n","// \"Модуль рендерить в собі компоненти:\r\n//  - UserNav - блок основної навігації\r\n//  - LogoutBtn - виходу з облікового запису\"\r\n\r\nimport { LogoutBtn } from './components/LogoutBtn/LogoutBtn';\r\nimport { UserNav } from './components/UserNav/UserNav';\r\n\r\nexport const SideBar = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n      <svg>\r\n\r\n      </svg>\r\n      <h2>Goose Track</h2>\r\n      <span>User Panel</span>\r\n      </div>\r\n      <UserNav />\r\n      <LogoutBtn />\r\n    </>\r\n  );\r\n};\r\n","// \"1. Сторінка повинна відображатись відповідно до макету на 3х розширеннях (375, 768, 1440), на ширині екрану до 375 блоки розмітки повинні тягнутись\r\n// 2. Компонент здійснює запит по данні користувача(email, name, id та т.і.), якщо під час рендеру компоненту ці данні відсутні в глобальному стейті\r\n// 3. Комопонент рендерить:\r\n//  - Header - модуль що відображається на всіх сторінках авторизованого юзера. Показує загальну інформацію та допоміжний інтерфейс роботи з обліковим записом.\r\n//  - SideBar - модуль що відображається на всіх сторінках авторизованого юзера, на планшеті та мобілці знаходиться в бургер-меню. Показує навігацію між сторінками та кнопку виходу з облікового запису. \"\r\n\r\nimport { Header } from 'modules/Header/Header';\r\nimport { SideBar } from 'modules/SideBar/SideBar';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nexport default function MainLayout() {\r\n  return (\r\n    <>\r\n      <div>MainLayout</div>\r\n      <Header />\r\n      <SideBar />\r\n      <Outlet />\r\n    </>\r\n  );\r\n}\r\n"],"names":["ThemeToggler","UserInfo","href","alt","Header","LogoutBtn","type","UserNav","to","SideBar","MainLayout"],"sourceRoot":""}